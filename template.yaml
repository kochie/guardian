AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Guardian

  Guardian is a key management and machine management service. This template has all the resources required to create
  the serverless infrastructure.

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5

Resources:

  VpnCreateFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: bin/vpn/
      Handler: create
      Runtime: go1.x
      Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html
      Events:
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /vpn
            Method: POST
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE

  VpnListFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: bin/vpn/
      Handler: list
      Runtime: go1.x
      Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html
      Events:
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /vpn
            Method: GET
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE

  VpnDeleteFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: bin/vpn/
      Handler: delete
      Runtime: go1.x
      Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html
      Events:
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /vpn
            Method: DELETE

  UserPool:
#    DependsOn:
#      - EmailService
    Type: AWS::Cognito::UserPool
    Properties:
#      LambdaConfig:
#        CreateAuthChallenge: !Ref CognitoChallengeFunction
#        DefineAuthChallenge: !Ref CognitoDefineFunction
#        PreSignUp: !Ref CognitoPreSignUpFunction
#        VerifyAuthChallengeResponse: !Ref CognitoVerifyFunction
#      EmailConfiguration:
#        ConfigurationSet: !Ref EmailService
#        EmailSendingAccount: DEVELOPER
#        From: Test User <testuser@example.com>
#        SourceArn: arn:aws:ses:ap-southeast-2:457234467265:identity/guardian@kochie.io
      UserPoolName: "Guardian_User_Pool"
      DeviceConfiguration:
        ChallengeRequiredOnNewDevice: false
        DeviceOnlyRememberedOnUserPrompt: false

  UserPoolTokenClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
      ExplicitAuthFlows:
        - ALLOW_CUSTOM_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH

  CognitoChallengeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bin/cognito/
      Handler: challenge
      Runtime: go1.x
      Tracing: Active
      Events:
        CognitoCreateAuth:
          Type: Cognito
          Properties:
            UserPool: !Ref UserPool
            Trigger: CreateAuthChallenge
      Environment:
        Variables:
          SES_FROM_ADDRESS: guardian@kochie.io
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - ses:SendEmail
              Resource: "*"

  CognitoDefineFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bin/cognito/
      Handler: define
      Runtime: go1.x
      Tracing: Active
      Events:
        CognitoDefine:
          Type: Cognito
          Properties:
            UserPool: !Ref UserPool
            Trigger: DefineAuthChallenge

  CognitoVerifyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bin/cognito/
      Handler: verify
      Runtime: go1.x
      Tracing: Active
      Events:
        CognitoVerify:
          Type: Cognito
          Properties:
            UserPool: !Ref UserPool
            Trigger: VerifyAuthChallengeResponse

  CognitoPreSignUpFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bin/cognito/
      Handler: presignup
      Runtime: go1.x
      Tracing: Active
      Events:
        CognitoPreSignUp:
          Type: Cognito
          Properties:
            UserPool: !Ref UserPool
            Trigger: PreSignUp

  CognitoPostAuthenticationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bin/cognito/
      Handler: post_authentication
      Runtime: go1.x
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - sts:AssumeRole
              Resource: "*"
      Events:
        CognitoPostAuthentication:
          Type: Cognito
          Properties:
            UserPool: !Ref UserPool
            Trigger: PostAuthentication
#      Role: !GetAtt PostAuthenticationRole.Arn

#  EmailService:
#    Type: AWS::SES::ConfigurationSet
#    Properties:
#      Name: "Guardian-Email-Configuration-Set"



Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  VpnCreateAPI:
    Description: "API Gateway endpoint URL for Prod environment for VPN Create function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/vpn/"
  VpnCreateFunction:
    Description: "VPN Create function ARN"
    Value: !GetAtt VpnCreateFunction.Arn
  VpnCreateFunctionIamRole:
    Description: "Implicit IAM Role created for VPN Create function"
    Value: !GetAtt VpnCreateFunctionRole.Arn
  VpnListAPI:
    Description: "API Gateway endpoint URL for Prod environment for VPN List function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/vpn/"
  VpnListFunction:
    Description: "VPN List function ARN"
    Value: !GetAtt VpnListFunction.Arn
  VpnListFunctionIamRole:
    Description: "Implicit IAM Role created for VPN List function"
    Value: !GetAtt VpnListFunctionRole.Arn
  VpnDeleteAPI:
    Description: "API Gateway endpoint URL for Prod environment for VPN Delete function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/vpn/"
  VpnDeleteFunction:
    Description: "VPN Delete function ARN"
    Value: !GetAtt VpnDeleteFunction.Arn
  VpnDeleteFunctionIamRole:
    Description: "Implicit IAM Role created for VPN Delete function"
    Value: !GetAtt VpnDeleteFunctionRole.Arn
